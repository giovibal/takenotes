// @generated by protoc-gen-es v1.6.0
// @generated from file takenotes/v1/notes.proto (package takenotes.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message takenotes.v1.CreateNoteRequest
 */
export declare class CreateNoteRequest extends Message<CreateNoteRequest> {
  /**
   * @generated from field: takenotes.v1.Note item = 1;
   */
  item?: Note;

  constructor(data?: PartialMessage<CreateNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.CreateNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNoteRequest;

  static equals(a: CreateNoteRequest | PlainMessage<CreateNoteRequest> | undefined, b: CreateNoteRequest | PlainMessage<CreateNoteRequest> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.CreateNoteResponse
 */
export declare class CreateNoteResponse extends Message<CreateNoteResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: takenotes.v1.Note item = 2;
   */
  item?: Note;

  constructor(data?: PartialMessage<CreateNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.CreateNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateNoteResponse;

  static equals(a: CreateNoteResponse | PlainMessage<CreateNoteResponse> | undefined, b: CreateNoteResponse | PlainMessage<CreateNoteResponse> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.UpdateNoteRequest
 */
export declare class UpdateNoteRequest extends Message<UpdateNoteRequest> {
  /**
   * @generated from field: takenotes.v1.Note item = 1;
   */
  item?: Note;

  constructor(data?: PartialMessage<UpdateNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.UpdateNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNoteRequest;

  static equals(a: UpdateNoteRequest | PlainMessage<UpdateNoteRequest> | undefined, b: UpdateNoteRequest | PlainMessage<UpdateNoteRequest> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.UpdateNoteResponse
 */
export declare class UpdateNoteResponse extends Message<UpdateNoteResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: takenotes.v1.Note item = 2;
   */
  item?: Note;

  constructor(data?: PartialMessage<UpdateNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.UpdateNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateNoteResponse;

  static equals(a: UpdateNoteResponse | PlainMessage<UpdateNoteResponse> | undefined, b: UpdateNoteResponse | PlainMessage<UpdateNoteResponse> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.DeleteNoteRequest
 */
export declare class DeleteNoteRequest extends Message<DeleteNoteRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<DeleteNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.DeleteNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteNoteRequest;

  static equals(a: DeleteNoteRequest | PlainMessage<DeleteNoteRequest> | undefined, b: DeleteNoteRequest | PlainMessage<DeleteNoteRequest> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.DeleteNoteResponse
 */
export declare class DeleteNoteResponse extends Message<DeleteNoteResponse> {
  /**
   * @generated from field: bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: string deleted_id = 2;
   */
  deletedId: string;

  constructor(data?: PartialMessage<DeleteNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.DeleteNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteNoteResponse;

  static equals(a: DeleteNoteResponse | PlainMessage<DeleteNoteResponse> | undefined, b: DeleteNoteResponse | PlainMessage<DeleteNoteResponse> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.GetNoteRequest
 */
export declare class GetNoteRequest extends Message<GetNoteRequest> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<GetNoteRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.GetNoteRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNoteRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNoteRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNoteRequest;

  static equals(a: GetNoteRequest | PlainMessage<GetNoteRequest> | undefined, b: GetNoteRequest | PlainMessage<GetNoteRequest> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.GetNoteResponse
 */
export declare class GetNoteResponse extends Message<GetNoteResponse> {
  /**
   * @generated from field: takenotes.v1.Note item = 1;
   */
  item?: Note;

  constructor(data?: PartialMessage<GetNoteResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.GetNoteResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetNoteResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetNoteResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetNoteResponse;

  static equals(a: GetNoteResponse | PlainMessage<GetNoteResponse> | undefined, b: GetNoteResponse | PlainMessage<GetNoteResponse> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.SearchNotesRequest
 */
export declare class SearchNotesRequest extends Message<SearchNotesRequest> {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * @generated from field: optional string next_page_token = 2;
   */
  nextPageToken?: string;

  constructor(data?: PartialMessage<SearchNotesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.SearchNotesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchNotesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchNotesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchNotesRequest;

  static equals(a: SearchNotesRequest | PlainMessage<SearchNotesRequest> | undefined, b: SearchNotesRequest | PlainMessage<SearchNotesRequest> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.SearchNotesResponse
 */
export declare class SearchNotesResponse extends Message<SearchNotesResponse> {
  /**
   * @generated from field: takenotes.v1.Note item = 1;
   */
  item?: Note;

  constructor(data?: PartialMessage<SearchNotesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.SearchNotesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SearchNotesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SearchNotesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SearchNotesResponse;

  static equals(a: SearchNotesResponse | PlainMessage<SearchNotesResponse> | undefined, b: SearchNotesResponse | PlainMessage<SearchNotesResponse> | undefined): boolean;
}

/**
 * @generated from message takenotes.v1.Note
 */
export declare class Note extends Message<Note> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 3;
   */
  updatedAt?: Timestamp;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  constructor(data?: PartialMessage<Note>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "takenotes.v1.Note";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Note;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Note;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Note;

  static equals(a: Note | PlainMessage<Note> | undefined, b: Note | PlainMessage<Note> | undefined): boolean;
}

